[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
requires-python = ">=3.8"
version = "0.1.0"
name = "{{cookiecutter.package_name}}"
description = "{{cookiecutter.short_description}}"
readme = "README.md"
license = { file = "LICENSE.txt" }
authors = [
    { name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}" },
]
keywords = [
    "Python",
]
dependencies = [
    "typer",
    "dvc",
    "openpredict >=0.2.1",
    # "openpredict@git+https://github.com/MaastrichtU-IDS/translator-openpredict.git@develop",
    # "openpredict@{root:uri}/../translator-openpredict",
]

[project.optional-dependencies]
train = [
    "scikit-learn",
    "pandas",
    # "numpy",
]
test = [
    "pytest >=7.1.3",
    "pytest-cov >=3.0.0",
    "mypy >=0.991",
    "black >= 22.8.0",
    "ruff >=0.0.189",
    "isort >=5.11.0",
]
dev = [
    "pre-commit >=2.17.0",
    "jupyter",
    "notebook",
    "uvicorn",
]


[project.urls]
Homepage = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}"
Documentation = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}"
History = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}/releases"
Tracker = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}/issues"
Source = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}"



# ENVIRONMENTS AND SCRIPTS
[tool.hatch.envs.default]
features = [
    "train",
    "test",
    "dev",
]
# post-install-commands = [
#     "pre-commit install",
#     "dvc pull",
# ]

[tool.hatch.envs.default.scripts]
api = "uvicorn trapi.main:app --host 0.0.0.0 --port 8808 --log-level=debug --reload"
train = "python src/{{cookiecutter.module_name}}/train.py {args}"
predict = "python src/{{cookiecutter.module_name}}/predict.py {args}"
test = "pytest {args}"
fmt = [
    "isort src tests",
    "ruff src tests --fix",
]
check = [
    "isort --check-only --diff src",
    "ruff src tests",
    "mypy src",
]
push-data = [
    "dvc add data",
    "dvc push",
]


[tool.hatch.metadata]
allow-direct-references = true

# TOOLS

[tool.isort]
line_length = 120
skip = ["src/{{cookiecutter.module_name}}/__init__.py"]
profile = "black"


[tool.mypy]
strict = false
implicit_reexport = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = true
warn_unused_ignores = true
warn_redundant_casts = true
# disallow_untyped_calls = false
# disallow_untyped_defs = false
# disallow_any_generics = false


# https://github.com/charliermarsh/ruff#supported-rules
[tool.ruff]
target-version = "py37"
line-length = 120
select = [
    "A",
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "E",   # pycodestyle errors
    "F",   # pyflakes
    # "FBT", # flake8-boolean-trap
    # "I",   # isort
    "ICN",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "UP",
    "W",  # pycodestyle warnings
    "YTT",
]

ignore = [
    "Q000", # single quotes found but double quotes preferred
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "B006", # do not use mutable data structures for argument defaults
    "C901", # too complex
    "S101", # Use of `assert` detected
    "T201", "T203", # remove print and pprint
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# [tool.ruff.isort]
# known-third-party = ["rdflib_endpoint"]
